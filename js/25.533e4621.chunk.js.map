{"version":3,"sources":["pages/Tutorial.js"],"names":["LogoImg","styled","div","props","src","DisplayGrid","GridMedia","Tutorial","color","theme","fontSize","radius","is_login","useSelector","state","user","React","useState","loading","setLoading","useEffect","setTimeout","customAlert","sweetConfirmReload","Fragment","is_flex4","height","isWebpSupported","webp","mainLogoWebp","png","mainLogo","maxWidth","margin","minHeight","text_align","border","button","bg","brand20","cursor","_onClick","history","push","size","small","bold2","brand100","window","location","href","Kakao_auth_url","width","justify_content","viewBox","fill","xmlns","opacity","fillRule","clipRule","d"],"mappings":"0PA6HMA,EAAUC,IAAOC,IAAV,2KAEc,SAACC,GAAD,OAAWA,EAAMC,OAOtCC,EAAcJ,IAAOC,IAAV,sNAYXI,EAAYL,IAAOC,IAAV,quBA8BAK,UA5JE,SAACJ,GAChB,IAAQK,EAA4BC,IAA5BD,MAAOE,EAAqBD,IAArBC,SAAUC,EAAWF,IAAXE,OACnBC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,YAEnD,EAA8BI,IAAMC,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAH,IAAMI,WAAU,WAEdD,GAAW,GACXE,YAAW,WACTF,GAAW,KACV,KAGCP,GACFU,IAAYC,mBACV,kEACA,CAAC,mEACD,aAGH,CAACX,IAGF,cAAC,IAAMY,SAAP,UACGN,EACC,cAAC,IAAD,CAAMO,UAAQ,EAACC,OAAO,QAAtB,SACE,cAAC1B,EAAD,CAASI,IAAKuB,4BAAoBC,IAAKC,aAAeC,IAAIC,aAG5D,cAAC,IAAD,CACEC,SAAS,QACTC,OAAO,SACPC,UAAU,QACVC,WAAW,SAJb,SAME,eAAC7B,EAAD,WACE,cAAC,IAAD,CAAM2B,OAAO,YAAb,SACE,cAAC,IAAD,MAIF,eAAC5B,EAAD,WACE,cAAC,IAAD,CACEqB,OAAO,OACPU,OAAO,OACPzB,OAAQA,EAAO0B,OACfC,GAAI9B,EAAM+B,QACVC,OAAO,IACPC,SAAU,WACRC,IAAQC,KAAK,UAPjB,SAUE,cAAC,IAAD,CACEV,OAAO,OACPW,KAAMlC,EAASmC,MACfC,MAAM,MACNtC,MAAOA,EAAMuC,SAJf,qDAWF,cAAC,IAAD,CACET,GAAG,UACHZ,OAAO,OACPU,OAAO,OACPzB,OAAQA,EAAO0B,OACfG,OAAO,IACPC,SAAU,WACRO,OAAOC,SAASC,KAAhB,UAA0BC,MAP9B,SAUE,eAAC,IAAD,CAAM1B,SAAS,IAAf,UACE,cAAC,IAAD,CAAM2B,MAAM,OAAO3B,SAAS,IAAI4B,gBAAgB,SAAhD,SACE,qBACED,MAAM,KACN1B,OAAO,KACP4B,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,QAAQ,MACRC,SAAS,UACTC,SAAS,UACTC,EAAE,0dACFL,KAAK,cAIX,cAAC,IAAD,CAAMX,KAAMlC,EAASmC,MAAOC,MAAM,MAAlC","file":"static/js/25.533e4621.chunk.js","sourcesContent":["// mealchak서비스 첫 페이지(splash screen, 간단 소개, 카카오 로그인)\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { useSelector } from \"react-redux\";\n\n// kakao login\nimport { Kakao_auth_url } from \"../shared/OAuth\";\n\n// style\nimport { Button, Grid, Text } from \"../elements\";\nimport theme from \"../styles/theme\";\nimport { TutorialSwiper } from \"../components\";\nimport { customAlert } from \"../components/Sweet\";\n\n// 이미지\nimport { png } from \"../styles/img/index\";\nimport { webp } from '../styles/img/webp/index';\nimport {isWebpSupported} from 'react-image-webp/dist/utils';\n\nconst Tutorial = (props) => {\n  const { color, fontSize, radius } = theme;\n  const is_login = useSelector((state) => state.user.is_login);\n  // splash screen\n  const [loading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    // splash screen 시간 설정\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    // 이미 로그인 한 사용자가 접근한 경우 서비스 내부로 이동시킴\n    if (is_login) {\n      customAlert.sweetConfirmReload(\n        \"앗 이미 로그인 중이에요\",\n        [\"홈 화면으로 이동할게요.\"],\n        \"history\"\n      );\n    }\n  }, [is_login]);\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Grid is_flex4 height=\"100vh\">\n          <LogoImg src={isWebpSupported() ? webp.mainLogoWebp : png.mainLogo}/>\n        </Grid>\n      ) : (\n        <Grid\n          maxWidth=\"36rem\"\n          margin=\"0 auto\"\n          minHeight=\"100vh\"\n          text_align=\"center\"\n        >\n          <GridMedia>\n            <Grid margin=\"2rem auto\">\n              <TutorialSwiper></TutorialSwiper>\n            </Grid>\n\n            {/* 둘러보기 사용자 용 버튼 */}\n            <DisplayGrid>\n              <Button\n                height=\"5rem\"\n                border=\"none\"\n                radius={radius.button}\n                bg={color.brand20}\n                cursor=\"t\"\n                _onClick={() => {\n                  history.push(\"/home\");\n                }}\n              >\n                <Text\n                  margin=\"auto\"\n                  size={fontSize.small}\n                  bold2=\"700\"\n                  color={color.brand100}\n                >\n                  밀착 둘러보기\n                </Text>\n              </Button>\n\n              {/* 소셜 로그인 기능 */}\n              <Button\n                bg=\"#FEE500\"\n                height=\"5rem\"\n                border=\"none\"\n                radius={radius.button}\n                cursor=\"t\"\n                _onClick={() => {\n                  window.location.href = `${Kakao_auth_url}`;\n                }}\n              >\n                <Grid is_flex4=\"t\">\n                  <Grid width=\"4rem\" is_flex4=\"t\" justify_content=\"center\">\n                    <svg\n                      width=\"18\"\n                      height=\"17\"\n                      viewBox=\"0 0 18 17\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        opacity=\"0.9\"\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M9 0C4.029 0 0 3.13 0 6.989C0.063509 8.21942 0.463823 9.40875 1.15723 10.4272C1.85063 11.4456 2.81048 12.254 3.93201 12.764L2.93201 16.431C2.914 16.5032 2.91832 16.5792 2.9444 16.6489C2.97048 16.7187 3.01708 16.7788 3.07806 16.8215C3.13905 16.8642 3.21157 16.8874 3.28601 16.888C3.36045 16.8886 3.4333 16.8667 3.495 16.825L7.87201 13.925C8.24201 13.961 8.61702 13.982 8.99902 13.982C13.969 13.982 17.999 10.853 17.999 6.993C17.999 3.133 13.969 0.0039978 8.99902 0.0039978\"\n                        fill=\"black\"\n                      />\n                    </svg>\n                  </Grid>\n                  <Text size={fontSize.small} bold2=\"700\">\n                    카카오 로그인\n                  </Text>\n                </Grid>\n              </Button>\n            </DisplayGrid>\n          </GridMedia>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst LogoImg = styled.div`\n  margin: auto;\n  background-image: url(\"${(props) => props.src}\");\n  width: 240px;\n  height: 80px;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst DisplayGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 1.6rem;\n  padding: 0 2rem 1.6rem;\n  width: 36rem;\n  height: auto;\n  position: fixed;\n  bottom: 0;\n  z-index: 1;\n`;\n\nconst GridMedia = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-aspect-ratio: 3/4) {\n    margin-top: 0rem;\n  }\n  @media (max-aspect-ratio: 3/4) and (min-height: 1000px) {\n    margin-top: 10rem;\n  }\n  @media (max-aspect-ratio: 3/4) and (min-height: 1300px) {\n    margin-top: 20rem;\n  }\n  @media (max-aspect-ratio: 5/8) and (min-height: 1200px) {\n    margin-top: 20rem;\n  }\n  @media (max-aspect-ratio: 3/5) and (max-height: 900px) {\n    margin-top: 5rem;\n  }\n  @media (max-aspect-ratio: 3/5) and (min-height: 900px) {\n    margin-top: 5rem;\n  }\n  @media (max-aspect-ratio: 1/2) and (max-height: 900px) {\n    margin-top: 10rem;\n  }\n  @media (max-aspect-ratio: 28/65) {\n    margin-top: 15rem;\n  }\n`;\n\nexport default Tutorial;\n"],"sourceRoot":""}