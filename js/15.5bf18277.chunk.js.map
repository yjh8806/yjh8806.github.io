{"version":3,"sources":["pages/Main.js","components/useDetectOutsideClick.js"],"names":["Main","props","media","useMediaQuery","backdrop","CSS","supports","color","theme","btn_border","fontSize","dispatch","useDispatch","user","useSelector","state","post_list","post","list","rank_list","rank","React","useState","ctg","setCtg","recent","nearBy","sort","setSort","all","kr","bunsik","cn","jp","west","cafe","etc","category","setCategory","useEffect","length","user_address","postActions","getPostAX","getRankDB","swiperRef","useRef","qaRef","el","initialState","isActive","setIsActive","onClick","e","current","contains","target","window","addEventListener","removeEventListener","useDetectOutsideClick","is_address","imageActions","setMask","Fragment","minHeight","margin","padding","shape","feedback","width","height","radius","bg","position","border","bottom","z_index","cursor","_onClick","FeedbackBtn","src","isWebpSupported","webp","UnionWebp","png","Union","size","bold","feedbackWebp","className","ref","style","text_align","absolute","small","href","rel","bg0","bg40","history","push","is_flex4","flex_direction","justify_content","minWidth","bold2","line_height","bg80","searchWebp","search","is_float","maxWidth","bg100","scrollToCategory","scrollIntoView","behavior","getCategory","value","getCtg","getSort","flex","align_items","slidesPerView","transform","textAlign","base","border_bottom","white_space","innerText","Hr","is_flex2","map","p","idx","key","post_id","is_flex_column","LogoImg","emptyHome_3xWebp","emptyHome_3x","defaultProps","styled","hr","div"],"mappings":"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","file":"static/js/15.5bf18277.chunk.js","sourcesContent":["// 메인 페이지\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Grid, Text, Button, Image } from \"../elements\";\nimport { Post, Footer, Header, MainBanner, PcSide } from \"../components\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDetectOutsideClick } from \"../components/useDetectOutsideClick\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport logger from \"../shared/Console\";\n\nimport theme from \"../styles/theme\";\nimport \"../components/style.css\";\n\n// 이미지\nimport { png } from \"../styles/img/index\";\nimport { webp } from \"../styles/img/webp/index\";\nimport { isWebpSupported } from \"react-image-webp/dist/utils\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"../shared/Swiper.scss\";\n\nconst Main = (props) => {\n  const media = useMediaQuery(\"(min-width: 950px)\");\n  const backdrop = CSS.supports(\"backdrop-filter: blur(4px)\");\n\n  const { color, btn_border, fontSize } = theme;\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const post_list = useSelector((state) => state.post?.list);\n  const rank_list = useSelector((state) => state.post?.rank);\n\n  const [ctg, setCtg] = React.useState(\"\");\n  const [sort, setSort] = React.useState({\n    recent: true,\n    nearBy: false,\n  });\n\n  const [category, setCategory] = React.useState({\n    all: true,\n    kr: false,\n    bunsik: false,\n    cn: false,\n    jp: false,\n    west: false,\n    cafe: false,\n    etc: false,\n  });\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostAX(\"전체\"));\n      setCtg(\"전체\");\n      dispatch(postActions.getRankDB());\n      return;\n    }\n    if (user?.user_address) {\n      dispatch(postActions.getPostAX(\"전체\"));\n      setCtg(\"전체\");\n      dispatch(postActions.getRankDB());\n      return;\n    }\n  }, []);\n\n  const swiperRef = React.useRef(null);\n\n  // 오늘의 인기메뉴 클릭 - 카테고리로 스크롤 이동\n  const scrollToCategory = () => {\n    swiperRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const qaRef = React.useRef(null);\n  const [isActive, setIsActive] = useDetectOutsideClick(qaRef, false);\n  const onClick = () => {\n    setIsActive(!isActive);\n  };\n\n  React.useEffect(() => {\n    const is_address =\n      user?.user_address === \"여기를 클릭해서 주소를 설정하세요!\"\n        ? true\n        : false;\n    dispatch(imageActions.setMask(is_address));\n  }, [user?.user_address]);\n\n  return (\n    <React.Fragment>\n      <PcSide {...props} />\n      <Grid\n        minHeight=\"100vh\"\n        margin=\"0 auto\"\n        padding={media ? \"0\" : \"0 0 5.2rem 0\"}\n      >\n        <Grid shape=\"container\">\n          <Header {...props} shape=\"홈\">\n            {user?.user_address}\n          </Header>\n          <Footer {...props}></Footer>\n          <Button\n            feedback\n            width=\"5rem\"\n            height=\"5rem\"\n            radius=\"2.5rem\"\n            bg={\n              backdrop ? \"rgba(255, 204, 151, 0.3)\" : \"rgba(255, 204,151, 0.6)\"\n            }\n            position=\"fixed\"\n            border=\"none\"\n            padding=\"0\"\n            margin={media ? \"0 0 0 29.3rem\" : \"0 0 0 29.5rem\"}\n            bottom={media ? \"1rem\" : \"6rem\"}\n            z_index=\"100\"\n            backdrop=\"blur(4px)\"\n            cursor=\"t\"\n            _onClick={onClick}\n          >\n            {isActive ? (\n              <FeedbackBtn src={isWebpSupported() ? webp.UnionWebp : png.Union}>\n                <Text size=\"2.4rem\" bold color=\"#fff\" margin=\"0.1rem 0 0 0\">\n                  !\n                </Text>\n              </FeedbackBtn>\n            ) : (\n              <FeedbackBtn\n                src={isWebpSupported() ? webp.feedbackWebp : png.feedback}\n              />\n            )}\n          </Button>\n          <div className=\"link-container\">\n            <nav\n              ref={qaRef}\n              className={`link ${isActive ? \"active\" : \"inactive\"}`}\n              style={media ? { bottom: \"6.7rem\" } : { bottom: \"11.5rem\" }}\n            >\n              <Grid\n                width=\"fit-content\"\n                height=\"fit-content\"\n                radius=\"inherit\"\n                text_align=\"center\"\n                absolute=\"relative\"\n              >\n                <Text size={fontSize.small}>밀착에서의 경험은 어떠셨나요!</Text>\n                <Text size={fontSize.small}>\n                  여러분의 소중한 의견에 귀 기울이겠습니다.\n                </Text>\n                <Text size={fontSize.small}>\n                  <a\n                    href=\"https://forms.gle/j2616Jgt3toPf4Dd8\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    후기 및 의견 작성하기\n                  </a>\n                </Text>\n              </Grid>\n            </nav>\n          </div>\n        </Grid>\n        <Grid width=\"36rem\" margin=\"0 auto\">\n          <Button\n            width=\"32rem\"\n            height=\"4.4rem\"\n            margin=\"0 1.8rem\"\n            bg={color.bg0}\n            border={btn_border.bg40}\n            radius=\"1.2rem\"\n            cursor=\"t\"\n            _onClick={() => {\n              history.push(\"/search\");\n            }}\n          >\n            <Grid\n              is_flex4=\"t\"\n              flex_direction=\"row\"\n              justify_content=\"space-between\"\n              padding=\"0.2rem 1.4rem 0\"\n            >\n              <Text\n                minWidth=\"17rem\"\n                height=\"2rem\"\n                size={fontSize.small}\n                bold2=\"400\"\n                line_height=\"150%\"\n                color={color.bg80}\n                text_align=\"left\"\n              >\n                오늘은 어떤 음식을 배달 시킬까?\n              </Text>\n              <Image\n                size=\"2.4\"\n                src={isWebpSupported() ? webp.searchWebp : png.search}\n                margin=\"0 0 0.4rem\"\n              />\n            </Grid>\n          </Button>\n        </Grid>\n        <Grid is_float=\"left\">\n          <Grid\n            width=\"fit-content\"\n            maxWidth=\"fit-content\"\n            padding=\"2.4rem 0 0 2.1rem\"\n          >\n            <Text size=\"1.6rem\" color={color.bg100} bold>\n              #오늘의 인기 메뉴\n            </Text>\n          </Grid>\n          <MainBanner\n            scrollToCategory={scrollToCategory}\n            {...rank_list}\n            category={category}\n            getCategory={(value) =>\n              setCategory({ ...{ category: false }, ...value })\n            }\n            getCtg={(value) => setCtg(value)}\n            getSort={() => setSort({ ...{ sort: false }, recent: true })}\n          />\n          <Grid height=\"0.8rem\" bg=\"#f4f4f3\" />\n          <div ref={swiperRef}></div>\n        </Grid>\n        <Grid\n          maxWidth=\"34.9rem\"\n          height=\"4.5rem\"\n          margin={media ? \"0 0 0 2rem\" : \"0 0 0 2.8rem\"}\n          flex\n          flex_direction=\"row\"\n          align_items=\"center\"\n          padding=\"2rem 0 1.6rem 0\"\n        >\n          <Swiper\n            className=\"category\"\n            slidesPerView=\"7.55\"\n            style={{ transform: \"none\" }}\n          >\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size={fontSize.base}\n                color={category.all ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0.1rem 0rem\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.all ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, all: true });\n                  setCtg(e.target.innerText);\n                }}\n              >\n                전체\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.kr ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.kr ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, kr: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                한식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.bunsik ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.bunsik ? \"0.2rem solid black\" : \"none\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, bunsik: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                분식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.cn ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.cn ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, cn: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                중식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.jp ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.jp ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, jp: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                일식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.west ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category?.west ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, west: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                양식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.cafe ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.cafe ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, cafe: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                카페\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.etc ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.etc ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, etc: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                기타\n              </Text>\n            </SwiperSlide>\n          </Swiper>\n        </Grid>\n        <Hr />\n        <Grid is_flex2 maxWidth=\"32rem\" margin=\"1.6rem auto\">\n          <Grid>\n            <Text size=\"1.3rem\" color=\"#9A9896\" bold2=\"500\">\n              정렬 기준\n            </Text>\n          </Grid>\n          <Grid flex justify_content=\"flex-end\">\n            <Text\n              size=\"1.3rem\"\n              color={sort?.recent ? \"#ff9425\" : \"#cecac7\"}\n              bold\n              cursor=\"t\"\n              _onClick={() => {\n                setSort({ ...{ sort: false }, recent: true });\n                dispatch(postActions.getPostAX(ctg));\n              }}\n            >\n              마감임박순\n            </Text>\n            <Text\n              size=\"1.3rem\"\n              color={sort?.nearBy ? \"#ff9425\" : \"#cecac7\"}\n              bold\n              margin=\"0 0 0 1rem\"\n              cursor=\"t\"\n              _onClick={() => {\n                setSort({ ...{ sort: false }, nearBy: true });\n                dispatch(postActions.getPostAX(ctg, \"nearBy\"));\n              }}\n            >\n              거리순\n            </Text>\n          </Grid>\n        </Grid>\n        <Grid>\n          {post_list?.length > 0 ? (\n            post_list.map((p, idx) => {\n              if (category.all) {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.kr && p.category === \"한식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.bunsik && p.category === \"분식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.cn && p.category === \"중식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.jp && p.category === \"일식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.west && p.category === \"양식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.cafe && p.category === \"카페\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.etc && p.category === \"기타\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              return null;\n            })\n          ) : (\n            <React.Fragment>\n              <Grid>\n                <Grid is_flex_column height=\"20rem\" margin=\"3.2rem 0 0 0\">\n                  <LogoImg\n                    src={\n                      isWebpSupported()\n                        ? webp.emptyHome_3xWebp\n                        : png.emptyHome_3x\n                    }\n                  ></LogoImg>\n                </Grid>\n                <Text\n                  size={fontSize.base}\n                  color={color.bg80}\n                  text_align=\"center\"\n                >\n                  설정한 주소 근처에 올라온 글이 없어요!\n                </Text>\n              </Grid>\n            </React.Fragment>\n          )}\n          {post_list.length === 0 && <Grid height=\"8.4rem\" />}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nMain.defaultProps = {};\n\nconst Hr = styled.hr`\n  width: 36rem;\n  height: 0.1rem;\n  background-color: #f4f4f3;\n  border: none;\n  margin: 0;\n`;\n\nconst LogoImg = styled.div`\n  margin: 0 auto 1rem auto;\n  background-image: url(\"${(props) => props.src}\");\n  width: 18.4rem;\n  height: 16.7rem;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst FeedbackBtn = styled.div`\n  width: 3.4rem;\n  height: 3.6rem;\n  max-width: 3.4rem;\n  max-height: 3.6rem;\n  border-radius: 1rem;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  background-position: center;\n  margin: 0.3rem 0 0 0;\n`;\n\nexport default Main;\n","import { useState, useEffect } from \"react\";\n\n/**\n * dropdown 클릭 시 handleclose\n * @param {React.node} el\n * @param {boolean} initialState\n */\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const onClick = (e) => {\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    if (isActive) {\n      window.addEventListener(\"click\", onClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", onClick);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n"],"sourceRoot":""}